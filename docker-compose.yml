services:
  ngnix:
    depends_on:
      - wordpress
    container_name: ${CONTAINER_NAME}-nginx
    image: nginx:1.15.12-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d:rw
      - wordpress:/var/www/html
      - ./wp-content:/var/www/html/wp-content:rw      
      - ./import:/var/www/html/import    
    networks:
      - internal

  database:
    container_name: ${CONTAINER_NAME}-database
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$DATABASE_USER", "-p$$DATABASE_ROOT_PASSWORD"]
      interval: 20s
      timeout: 20s
      retries: 10
    ports:
      - "${DATABASE_PORT}:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - internal

  phpmyadmin:
    container_name: ${CONTAINER_NAME}-phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PMA_HOST: database
      PMA_PORT: ${DATABASE_PORT}
      PMA_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    networks:
      - internal

  wordpress:
    depends_on:
      - database
    container_name: ${CONTAINER_NAME}-wordpress
    image: wordpress:6.7.1-fpm-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      WORDPRESS_DB_HOST: database:${DATABASE_PORT}
      WORDPRESS_DB_NAME: ${DATABASE_NAME}
      WORDPRESS_DB_USER: ${DATABASE_USER}
      WORDPRESS_DB_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - wordpress:/var/www/html
      - ./wp-content:/var/www/html/wp-content:rw
      - ./import:/var/www/html/import
    networks:
      - internal

volumes:
  dbdata:
  wordpress:

networks:
  internal:
    driver: bridge
